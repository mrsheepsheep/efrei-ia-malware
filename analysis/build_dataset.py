# -*- coding: utf-8 -*-
#! /usr/bin/python2
import os
import argparse
import csv

from functions import *

def extract_dir(path):
    data_full = []
    i = 0
    allfiles = os.listdir(path)
    for filename in allfiles:
        i+=1
        status = "OK"
        try:
            fullpath = os.path.join(path, filename)
            data = extract_infos(fullpath)
            data['ID'] = i
            data['md5'] = md5(fullpath)
            data['legitimate'] = 0
            data_full.append(data)
        except pefile.PEFormatError:
            status = "ERROR <------"
        print('[{0}/{1}] {2} {3}'.format(i, len(allfiles), filename, status))
    print('Fichiers extraits avec succès: {0}/{1}'.format(len(data_full), len(allfiles)))
    return data_full

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Extraction des données des PE')
    parser.add_argument('-f', help='PE à extraire', action='store_true')
    parser.add_argument('-c', help='Convertit un dossier contenant des PE en CSV avec les données extraites', action='store_true')
    parser.add_argument('path', help='Chemin du fichier ou du dossier à analyser/convertir')
    args = parser.parse_args()
    if (args.c):
        data_full = extract_dir(args.path)
        # Conversion en CSV
        with open('dataset.csv', 'wb') as f:
            writer = csv.DictWriter(f, data_full[0].keys(), delimiter=',')
            writer.writeheader()
            writer.writerows(data_full)
        print('Conversion terminée.')
    elif (args.f):
        data = extract_infos(args.path)
